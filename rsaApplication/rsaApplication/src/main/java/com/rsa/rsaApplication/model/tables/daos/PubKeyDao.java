/*
 * This file is generated by jOOQ.
 */
package com.rsa.rsaApplication.model.tables.daos;


import com.rsa.rsaApplication.model.tables.PubKey;
import com.rsa.rsaApplication.model.tables.records.PubKeyRecord;

import java.util.List;

import javax.annotation.processing.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PubKeyDao extends DAOImpl<PubKeyRecord, com.rsa.rsaApplication.model.tables.pojos.PubKey, Integer> {

    /**
     * Create a new PubKeyDao without any configuration
     */
    public PubKeyDao() {
        super(PubKey.PUB_KEY, com.rsa.rsaApplication.model.tables.pojos.PubKey.class);
    }

    /**
     * Create a new PubKeyDao with an attached configuration
     */
    public PubKeyDao(Configuration configuration) {
        super(PubKey.PUB_KEY, com.rsa.rsaApplication.model.tables.pojos.PubKey.class, configuration);
    }

    @Override
    public Integer getId(com.rsa.rsaApplication.model.tables.pojos.PubKey object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.rsa.rsaApplication.model.tables.pojos.PubKey> fetchRangeOfId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(PubKey.PUB_KEY.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.rsa.rsaApplication.model.tables.pojos.PubKey> fetchById(Integer... values) {
        return fetch(PubKey.PUB_KEY.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.rsa.rsaApplication.model.tables.pojos.PubKey fetchOneById(Integer value) {
        return fetchOne(PubKey.PUB_KEY.ID, value);
    }

    /**
     * Fetch records that have <code>pub_key BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.rsa.rsaApplication.model.tables.pojos.PubKey> fetchRangeOfPubKey(String lowerInclusive, String upperInclusive) {
        return fetchRange(PubKey.PUB_KEY.PUB_KEY_, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>pub_key IN (values)</code>
     */
    public List<com.rsa.rsaApplication.model.tables.pojos.PubKey> fetchByPubKey(String... values) {
        return fetch(PubKey.PUB_KEY.PUB_KEY_, values);
    }

    /**
     * Fetch records that have <code>usr_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.rsa.rsaApplication.model.tables.pojos.PubKey> fetchRangeOfUsrId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(PubKey.PUB_KEY.USR_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>usr_id IN (values)</code>
     */
    public List<com.rsa.rsaApplication.model.tables.pojos.PubKey> fetchByUsrId(Integer... values) {
        return fetch(PubKey.PUB_KEY.USR_ID, values);
    }
}
