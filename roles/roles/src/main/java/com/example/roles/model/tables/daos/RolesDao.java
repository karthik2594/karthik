/*
 * This file is generated by jOOQ.
 */
package com.example.roles.model.tables.daos;


import com.example.roles.model.tables.Roles;
import com.example.roles.model.tables.records.RolesRecord;

import java.util.List;

import javax.annotation.processing.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RolesDao extends DAOImpl<RolesRecord, com.example.roles.model.tables.pojos.Roles, Integer> {

    /**
     * Create a new RolesDao without any configuration
     */
    public RolesDao() {
        super(Roles.ROLES, com.example.roles.model.tables.pojos.Roles.class);
    }

    /**
     * Create a new RolesDao with an attached configuration
     */
    public RolesDao(Configuration configuration) {
        super(Roles.ROLES, com.example.roles.model.tables.pojos.Roles.class, configuration);
    }

    @Override
    public Integer getId(com.example.roles.model.tables.pojos.Roles object) {
        return object.getRoleId();
    }

    /**
     * Fetch records that have <code>role BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.example.roles.model.tables.pojos.Roles> fetchRangeOfRole(String lowerInclusive, String upperInclusive) {
        return fetchRange(Roles.ROLES.ROLE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>role IN (values)</code>
     */
    public List<com.example.roles.model.tables.pojos.Roles> fetchByRole(String... values) {
        return fetch(Roles.ROLES.ROLE, values);
    }

    /**
     * Fetch records that have <code>role_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.example.roles.model.tables.pojos.Roles> fetchRangeOfRoleId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Roles.ROLES.ROLE_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>role_id IN (values)</code>
     */
    public List<com.example.roles.model.tables.pojos.Roles> fetchByRoleId(Integer... values) {
        return fetch(Roles.ROLES.ROLE_ID, values);
    }

    /**
     * Fetch a unique record that has <code>role_id = value</code>
     */
    public com.example.roles.model.tables.pojos.Roles fetchOneByRoleId(Integer value) {
        return fetchOne(Roles.ROLES.ROLE_ID, value);
    }
}
