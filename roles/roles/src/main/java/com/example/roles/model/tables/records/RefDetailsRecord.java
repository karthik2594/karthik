/*
 * This file is generated by jOOQ.
 */
package com.example.roles.model.tables.records;


import com.example.roles.model.tables.RefDetails;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RefDetailsRecord extends UpdatableRecordImpl<RefDetailsRecord> implements Record3<Integer, Integer, Integer> {

    private static final long serialVersionUID = -1063970701;

    /**
     * Setter for <code>public.ref_details.ref_id</code>.
     */
    public void setRefId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.ref_details.ref_id</code>.
     */
    public Integer getRefId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.ref_details.rol_id</code>.
     */
    public void setRolId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.ref_details.rol_id</code>.
     */
    public Integer getRolId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.ref_details.use_id</code>.
     */
    public void setUseId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.ref_details.use_id</code>.
     */
    public Integer getUseId() {
        return (Integer) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, Integer, Integer> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Integer, Integer, Integer> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return RefDetails.REF_DETAILS.REF_ID;
    }

    @Override
    public Field<Integer> field2() {
        return RefDetails.REF_DETAILS.ROL_ID;
    }

    @Override
    public Field<Integer> field3() {
        return RefDetails.REF_DETAILS.USE_ID;
    }

    @Override
    public Integer component1() {
        return getRefId();
    }

    @Override
    public Integer component2() {
        return getRolId();
    }

    @Override
    public Integer component3() {
        return getUseId();
    }

    @Override
    public Integer value1() {
        return getRefId();
    }

    @Override
    public Integer value2() {
        return getRolId();
    }

    @Override
    public Integer value3() {
        return getUseId();
    }

    @Override
    public RefDetailsRecord value1(Integer value) {
        setRefId(value);
        return this;
    }

    @Override
    public RefDetailsRecord value2(Integer value) {
        setRolId(value);
        return this;
    }

    @Override
    public RefDetailsRecord value3(Integer value) {
        setUseId(value);
        return this;
    }

    @Override
    public RefDetailsRecord values(Integer value1, Integer value2, Integer value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RefDetailsRecord
     */
    public RefDetailsRecord() {
        super(RefDetails.REF_DETAILS);
    }

    /**
     * Create a detached, initialised RefDetailsRecord
     */
    public RefDetailsRecord(Integer refId, Integer rolId, Integer useId) {
        super(RefDetails.REF_DETAILS);

        set(0, refId);
        set(1, rolId);
        set(2, useId);
    }
}
