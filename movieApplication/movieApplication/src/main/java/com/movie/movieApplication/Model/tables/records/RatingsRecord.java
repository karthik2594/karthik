/*
 * This file is generated by jOOQ.
 */
package com.movie.movieApplication.Model.tables.records;


import com.movie.movieApplication.Model.tables.Ratings;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RatingsRecord extends UpdatableRecordImpl<RatingsRecord> implements Record2<Integer, Integer> {

    private static final long serialVersionUID = -433136474;

    /**
     * Setter for <code>public.ratings.rating_id</code>.
     */
    public void setRatingId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.ratings.rating_id</code>.
     */
    public Integer getRatingId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.ratings.rating</code>.
     */
    public void setRating(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.ratings.rating</code>.
     */
    public Integer getRating() {
        return (Integer) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<Integer, Integer> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<Integer, Integer> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Ratings.RATINGS.RATING_ID;
    }

    @Override
    public Field<Integer> field2() {
        return Ratings.RATINGS.RATING;
    }

    @Override
    public Integer component1() {
        return getRatingId();
    }

    @Override
    public Integer component2() {
        return getRating();
    }

    @Override
    public Integer value1() {
        return getRatingId();
    }

    @Override
    public Integer value2() {
        return getRating();
    }

    @Override
    public RatingsRecord value1(Integer value) {
        setRatingId(value);
        return this;
    }

    @Override
    public RatingsRecord value2(Integer value) {
        setRating(value);
        return this;
    }

    @Override
    public RatingsRecord values(Integer value1, Integer value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RatingsRecord
     */
    public RatingsRecord() {
        super(Ratings.RATINGS);
    }

    /**
     * Create a detached, initialised RatingsRecord
     */
    public RatingsRecord(Integer ratingId, Integer rating) {
        super(Ratings.RATINGS);

        set(0, ratingId);
        set(1, rating);
    }
}
