/*
 * This file is generated by jOOQ.
 */
package com.movie.movieApplication.Model.tables.daos;


import com.movie.movieApplication.Model.tables.Crew;
import com.movie.movieApplication.Model.tables.records.CrewRecord;

import java.util.List;

import javax.annotation.processing.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CrewDao extends DAOImpl<CrewRecord, com.movie.movieApplication.Model.tables.pojos.Crew, Integer> {

    /**
     * Create a new CrewDao without any configuration
     */
    public CrewDao() {
        super(Crew.CREW, com.movie.movieApplication.Model.tables.pojos.Crew.class);
    }

    /**
     * Create a new CrewDao with an attached configuration
     */
    public CrewDao(Configuration configuration) {
        super(Crew.CREW, com.movie.movieApplication.Model.tables.pojos.Crew.class, configuration);
    }

    @Override
    public Integer getId(com.movie.movieApplication.Model.tables.pojos.Crew object) {
        return object.getCrewId();
    }

    /**
     * Fetch records that have <code>crew_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.movie.movieApplication.Model.tables.pojos.Crew> fetchRangeOfCrewId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Crew.CREW.CREW_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>crew_id IN (values)</code>
     */
    public List<com.movie.movieApplication.Model.tables.pojos.Crew> fetchByCrewId(Integer... values) {
        return fetch(Crew.CREW.CREW_ID, values);
    }

    /**
     * Fetch a unique record that has <code>crew_id = value</code>
     */
    public com.movie.movieApplication.Model.tables.pojos.Crew fetchOneByCrewId(Integer value) {
        return fetchOne(Crew.CREW.CREW_ID, value);
    }

    /**
     * Fetch records that have <code>lead_role BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.movie.movieApplication.Model.tables.pojos.Crew> fetchRangeOfLeadRole(String lowerInclusive, String upperInclusive) {
        return fetchRange(Crew.CREW.LEAD_ROLE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>lead_role IN (values)</code>
     */
    public List<com.movie.movieApplication.Model.tables.pojos.Crew> fetchByLeadRole(String... values) {
        return fetch(Crew.CREW.LEAD_ROLE, values);
    }

    /**
     * Fetch records that have <code>others BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.movie.movieApplication.Model.tables.pojos.Crew> fetchRangeOfOthers(String lowerInclusive, String upperInclusive) {
        return fetchRange(Crew.CREW.OTHERS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>others IN (values)</code>
     */
    public List<com.movie.movieApplication.Model.tables.pojos.Crew> fetchByOthers(String... values) {
        return fetch(Crew.CREW.OTHERS, values);
    }
}
