/*
 * This file is generated by jOOQ.
 */
package com.movie.movieApplication.Model.tables.daos;


import com.movie.movieApplication.Model.tables.Ratings;
import com.movie.movieApplication.Model.tables.records.RatingsRecord;

import java.util.List;

import javax.annotation.processing.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RatingsDao extends DAOImpl<RatingsRecord, com.movie.movieApplication.Model.tables.pojos.Ratings, Integer> {

    /**
     * Create a new RatingsDao without any configuration
     */
    public RatingsDao() {
        super(Ratings.RATINGS, com.movie.movieApplication.Model.tables.pojos.Ratings.class);
    }

    /**
     * Create a new RatingsDao with an attached configuration
     */
    public RatingsDao(Configuration configuration) {
        super(Ratings.RATINGS, com.movie.movieApplication.Model.tables.pojos.Ratings.class, configuration);
    }

    @Override
    public Integer getId(com.movie.movieApplication.Model.tables.pojos.Ratings object) {
        return object.getRatingId();
    }

    /**
     * Fetch records that have <code>rating_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.movie.movieApplication.Model.tables.pojos.Ratings> fetchRangeOfRatingId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Ratings.RATINGS.RATING_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>rating_id IN (values)</code>
     */
    public List<com.movie.movieApplication.Model.tables.pojos.Ratings> fetchByRatingId(Integer... values) {
        return fetch(Ratings.RATINGS.RATING_ID, values);
    }

    /**
     * Fetch a unique record that has <code>rating_id = value</code>
     */
    public com.movie.movieApplication.Model.tables.pojos.Ratings fetchOneByRatingId(Integer value) {
        return fetchOne(Ratings.RATINGS.RATING_ID, value);
    }

    /**
     * Fetch records that have <code>rating BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.movie.movieApplication.Model.tables.pojos.Ratings> fetchRangeOfRating(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Ratings.RATINGS.RATING, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>rating IN (values)</code>
     */
    public List<com.movie.movieApplication.Model.tables.pojos.Ratings> fetchByRating(Integer... values) {
        return fetch(Ratings.RATINGS.RATING, values);
    }
}
