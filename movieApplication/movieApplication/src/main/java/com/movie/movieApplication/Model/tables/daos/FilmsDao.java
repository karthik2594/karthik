/*
 * This file is generated by jOOQ.
 */
package com.movie.movieApplication.Model.tables.daos;


import com.movie.movieApplication.Model.tables.Films;
import com.movie.movieApplication.Model.tables.records.FilmsRecord;

import java.util.List;

import javax.annotation.processing.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FilmsDao extends DAOImpl<FilmsRecord, com.movie.movieApplication.Model.tables.pojos.Films, Integer> {

    /**
     * Create a new FilmsDao without any configuration
     */
    public FilmsDao() {
        super(Films.FILMS, com.movie.movieApplication.Model.tables.pojos.Films.class);
    }

    /**
     * Create a new FilmsDao with an attached configuration
     */
    public FilmsDao(Configuration configuration) {
        super(Films.FILMS, com.movie.movieApplication.Model.tables.pojos.Films.class, configuration);
    }

    @Override
    public Integer getId(com.movie.movieApplication.Model.tables.pojos.Films object) {
        return object.getFilmId();
    }

    /**
     * Fetch records that have <code>film_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.movie.movieApplication.Model.tables.pojos.Films> fetchRangeOfFilmId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Films.FILMS.FILM_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>film_id IN (values)</code>
     */
    public List<com.movie.movieApplication.Model.tables.pojos.Films> fetchByFilmId(Integer... values) {
        return fetch(Films.FILMS.FILM_ID, values);
    }

    /**
     * Fetch a unique record that has <code>film_id = value</code>
     */
    public com.movie.movieApplication.Model.tables.pojos.Films fetchOneByFilmId(Integer value) {
        return fetchOne(Films.FILMS.FILM_ID, value);
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.movie.movieApplication.Model.tables.pojos.Films> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Films.FILMS.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<com.movie.movieApplication.Model.tables.pojos.Films> fetchByName(String... values) {
        return fetch(Films.FILMS.NAME, values);
    }

    /**
     * Fetch records that have <code>description BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.movie.movieApplication.Model.tables.pojos.Films> fetchRangeOfDescription(String lowerInclusive, String upperInclusive) {
        return fetchRange(Films.FILMS.DESCRIPTION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>description IN (values)</code>
     */
    public List<com.movie.movieApplication.Model.tables.pojos.Films> fetchByDescription(String... values) {
        return fetch(Films.FILMS.DESCRIPTION, values);
    }
}
